"use client";`nimport React from "react";`n`ntype Stats = {`n  industry: string;`n  industry_avg: number | null;`n  industry_count: number;`n  role_level: string | null;`n  role_avg: number | null;`n  role_count: number;`n};`n`ntype ApiResponse =`n  | { ok: true; stats: Stats; sample: Array<{ id: number; score: number | null; role_level: string | null; completed_at: string }>; }`n  | { ok: false; error: string };`n`nexport default function IndustryComparisonChart(props: {`n  userIndustry: string;`n  userRoleLevel?: string | null;`n  userScore?: number | null;`n}) {`n  const { userIndustry, userRoleLevel, userScore } = props;`n  const [loading, setLoading] = React.useState(true);`n  const [error, setError] = React.useState<string | null>(null);`n  const [stats, setStats] = React.useState<Stats | null>(null);`n`n  React.useEffect(() => {`n    let cancelled = false;`n    async function fetchComparisonData() {`n      try {`n        setLoading(true);`n        setError(null);`n        const params = new URLSearchParams({ industry: (userIndustry || "").toLowerCase() });`n        if (userRoleLevel) params.set("role_level", userRoleLevel.toLowerCase());`n        const res = await fetch(`/api/industry-stats?${params.toString()}`, { cache: "no-store" });`n        const json: ApiResponse = await res.json();`n        if (!json || (json as any).ok !== true) {`n          throw new Error((json as any)?.error || "No assessment data available for comparison");`n        }`n        if (!cancelled) { setStats(json.stats); }`n      } catch (e: any) {`n        if (!cancelled) { setError(e?.message ?? "Failed to load comparison data"); }`n      } finally {`n        if (!cancelled) setLoading(false);`n      }`n    }`n    fetchComparisonData();`n    return () => { cancelled = true; };`n  }, [userIndustry, userRoleLevel]);`n`n  if (loading) return <div className="p-4 rounded-2xl border">Loading industry comparison…</div>;`n  if (error || !stats) {`n    return (`n      <div className="p-4 rounded-2xl border">`n        <h3 className="text-lg font-semibold mb-2">Industry comparison</h3>`n        <p className="text-gray-600">`n          Not enough peer data yet for <strong>{userIndustry}</strong>`n          {userRoleLevel ? <> at <strong>{userRoleLevel}</strong> level</> : null}. We will show comparisons as soon as we`n          have a few more assessments. No judgment, just support.`n        </p>`n      </div>`n    );`n  }`n`n  return (`n    <div className="p-4 rounded-2xl border space-y-3">`n      <h3 className="text-lg font-semibold">Industry comparison</h3>`n      <div className="grid grid-cols-1 md:grid-cols-3 gap-3">`n        <div className="p-3 rounded-xl border">`n          <div className="text-sm text-gray-600">Your score</div>`n          <div className="text-3xl font-bold">{userScore ?? "—"}</div>`n        </div>`n        <div className="p-3 rounded-xl border">`n          <div className="text-sm text-gray-600">Industry avg ({stats.industry_count})</div>`n          <div className="text-3xl font-bold">{stats.industry_avg ?? "—"}</div>`n        </div>`n        <div className="p-3 rounded-xl border">`n          <div className="text-sm text-gray-600">`n            {stats.role_level ? <>Role avg ({stats.role_level})</> : "Role avg"}`n            {stats.role_count ? ` (${stats.role_count})` : ""}`n          </div>`n          <div className="text-3xl font-bold">{stats.role_avg ?? "—"}</div>`n        </div>`n      </div>`n      <p className="text-gray-600 text-sm">`n        We will keep building benchmarks as more people in <strong>{stats.industry}</strong>`n        {stats.role_level ? <> at <strong>{stats.role_level}</strong> level</> : null} complete the assessment.`n      </p>`n    </div>`n  );`n}